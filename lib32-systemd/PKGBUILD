# Maintainer: Philip Müller <philm@manjaro.org>
# Contributor: Christian Hesse <mail@eworm.de>
# Contributor: Dave Reisner <dreisner@archlinux.org>
# Contributor: Tom Gundersen <teg@jklm.no>

pkgname=lib32-systemd
_pkgbasename=systemd
# latest commit on stable branch
_commit='f58e62cbbc1c2842881a2a6ab9beda7bcb044a30'
# Bump this to latest major release for signed tag verification,
# the commit count is handled by pkgver() function.
pkgver=238.133
pkgrel=1
pkgdesc="system and service manager (32-bit)"
arch=('x86_64')
url="https://www.github.com/systemd/systemd"
license=('GPL2' 'LGPL2.1')
depends=('lib32-gcc-libs' 'lib32-libcap' 'lib32-libgcrypt' 'lib32-xz' 'systemd')
makedepends=('gcc-multilib' 'git' 'gperf' 'intltool' 'lib32-acl' 'lib32-bzip2'
             'lib32-curl' 'lib32-dbus' 'lib32-gcc-libs' 'lib32-glib2'
             'lib32-gnutls' 'lib32-libelf' 'lib32-libidn' 'lib32-pcre2'
             'libxslt' 'meson')
options=('strip')
validpgpkeys=('63CDA1E5D3FC22B998D20DD6327F26951A015CC4'  # Lennart Poettering <lennart@poettering.net>
              '5C251B5FC54EB2F80F407AAAC54CA336CFEB557E') # Zbigniew Jędrzejewski-Szmek <zbyszek@in.waw.pl>
source=('git://github.com/systemd/systemd-stable.git'
        'git://github.com/systemd/systemd.git')
sha256sums=('SKIP'
            'SKIP')

_backports=(
  # core: sd-shutdown improvements (#8429) (#8155)
  '0494cae03d762eaf2fb7217ee7d70f615dcb5183'
  '1d62d22d9432d5c4a637002c9a29b20d52f25d9a'
  '3bc341bee9fc7dfb41a131246b6fb0afd6ff4407'
  '8645ffd12b3cc7b0292acd9e1d691c4fab4cf409'
  'e783b4902f387640bba12496936d01e967545c3c'
  '456b2199f6ef0378da007e71347657bcf83ae465'
  # Use libmount in systemd-shutdown, add tests (#8452) 
  '95b862b0540ac24999fdfbd670e8744bb626729a'
  '6fa392bf911ef17caf4c13e839236c8edd11bfaf'
  'a6dcd22976a10d7733de91aca240427c5def1bc9'
  '1fd8edb53aa5894e9b8cbec87376ecce660d3087'
  '71ae04c40081d11cc412d731d59c4a25e6bc5f07'
  # shutdown: Don't limit unmount attempts prematurely (#8469)
  'ac9cea5ba30acbf17fd431a4a4092c4dbee23593'
  # nspawn: wait for network namespace creation before interface setup (#8633)
  '7511655807e90aa33ea7b71991401a79ec36bb41'
)

_reverts=(
)

_validate_tag() {
  local success fingerprint trusted status tag=v${pkgver%.*}

  parse_gpg_statusfile /dev/stdin < <(git verify-tag --raw "$tag" 2>&1)

  if (( ! success )); then
    error 'failed to validate tag %s\n' "$tag"
    return 1
  fi

  if ! in_array "$fingerprint" "${validpgpkeys[@]}" && (( ! trusted )); then
    error 'unknown or untrusted public key: %s\n' "$fingerprint"
    return 1
  fi

  case $status in
    'expired')
      warning 'the signature has expired'
      ;;
    'expiredkey')
      warning 'the key has expired'
      ;;
  esac

  return 0
}

pkgver() {
  local version count

  cd "$_pkgbasename-stable"

  version="$(git describe --abbrev=0 --tags)"
  count="$(git rev-list --count ${version}..)"
  printf '%s.%s' "${version#v}" "${count}"
}

prepare() {
  cd "$_pkgbasename-stable"

  git remote add upstream ../systemd/
  git fetch --all

  git checkout "${_commit}"

  _validate_tag || return

  local _commit
  for _commit in "${_backports[@]}"; do
    echo "patching $_commit"
    git cherry-pick -n "$_commit"
  done
  for _commit in "${_reverts[@]}"; do
    echo "reverting $_commit"
    git revert -n "$_commit"
  done
}

build() {
  export CC="gcc -m32"
  export CXX="g++ -m32"
  export PKG_CONFIG_PATH="/usr/lib32/pkgconfig"

  local timeservers=({0..3}.manjaro.pool.ntp.org)

  local meson_options=(
    --libexecdir	/usr/lib32
    --libdir		/usr/lib32

    -Daudit=false
    -Dgnuefi=false
    -Dima=false
    -Dlz4=false
    -Dblkid=false
    -Dkmod=false
    -Dlibcryptsetup=false
    -Dlibiptc=false
    -Dmanpages=false
    -Dnetworkd=false
    -Dpam=false
    -Dpython=false
    -Dseccomp=false
    -Dman=false
    -Dhtml=false

    -Ddbuspolicydir=/usr/share/dbus-1/system.d
    -Ddefault-dnssec=no
    # TODO(dreisner): consider changing this to unified
    -Ddefault-hierarchy=hybrid
    -Ddefault-kill-user-processes=false
    -Dfallback-hostname='manjaro'
    -Dntp-servers="${timeservers[*]}"
    -Drpmmacrosdir=no
    -Dsysvinit-path=
    -Dsysvrcnd-path=
  )

  arch-meson "$_pkgbasename-stable" build "${meson_options[@]}"

  ninja -C build
}

package() {
  DESTDIR="$pkgdir" ninja -C build install

  rm -rf "${pkgdir}"/{etc,var}
  rm -rf "${pkgdir}"/usr/{bin,include,lib,share}
}
